// <auto-generated />
using System;
using JabulaniRubiblueAss.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JabulaniRubiblueAss.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190117135639_seeddata")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JabulaniRubiblueAss.Repository.ORM.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CourseId");

                    b.HasIndex("CourseName")
                        .IsUnique()
                        .HasFilter("[CourseName] IS NOT NULL");

                    b.ToTable("Courses");

                    b.HasData(
                        new { CourseId = 1, CourseName = "Chemistry", EndDate = new DateTime(2018, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2018, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { CourseId = 2, CourseName = "Computer Science", EndDate = new DateTime(2018, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("JabulaniRubiblueAss.Repository.ORM.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("IDNumber");

                    b.Property<string>("Surname");

                    b.HasKey("StudentId");

                    b.HasIndex("IDNumber")
                        .IsUnique()
                        .HasFilter("[IDNumber] IS NOT NULL");

                    b.ToTable("Students");

                    b.HasData(
                        new { StudentId = 1, EmailAddress = "Jaybeedzivas@gmail.com", FirstName = "Jabulani", IDNumber = "4514512761256", Surname = "Madzivadondo" }
                    );
                });

            modelBuilder.Entity("JabulaniRubiblueAss.Repository.ORM.StudentCourse", b =>
                {
                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("JabulaniRubiblueAss.Repository.ORM.StudentCourse", b =>
                {
                    b.HasOne("JabulaniRubiblueAss.Repository.ORM.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JabulaniRubiblueAss.Repository.ORM.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
